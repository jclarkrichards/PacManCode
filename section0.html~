<!DOCTYPE html>
<html>
  <head>
    <title>Pacman Code</title>
    <link rel="stylesheet" href="style.css">
    <link href='https://fonts.googleapis.com/css?family=Poppins|Press+Start+2P' rel='stylesheet' type='text/css'>  
  </head>

  <body>
    <div id="top"></div>
    <div class="page">
    <div class="navigation">
      <header>
	<h1><img src="pacman.png"/>... Pacman Code ...<img src="pacman.png"/></h1>
	<hr />
	<nav>
	  <ul>
	    <li><a href="index.html">Home</a></li>
	    <li><a href="code.html">Code</a></li>
	    <li><a href="clones.html">Clones</a></li>
	    <li><a href="discuss.html">Discuss</a></li>
	    <li><a href="about.html">About</a></li>
	    <li><a href="contact.html">Contact</a></li>
	  </ul>
	</nav>
      </header>
    </div>

    <hr />
    <h2>Section 0: A Blank Screen</h2>
    <div class="container">
      <h3>Setup</h3>
      <p>This isn't a very exciting section, but it's the first one and needs to be successfully completed otherwise you won't be able to do the other sections.  The whole point of this section is just to get a blank screen up.  We're not going to draw anything to it yet.  Let's just make sure that we have everything installed correctly.</p>
      <p>I don't know what operating system you're using.  I use Windows and Ubuntu, depending on my mood.  I think most people use either Windows, Mac, or Ubuntu.  If you're using something else, then I can't help you with your setup.  But, getting started is pretty easy, all you need is a version of Python installed, and it's most likely already installed on your computer.  If it isn't then go ahead and do that.  I'm not going to tell you how to install stuff, if you can't figure out how to research it then maybe you'd prefer stamp collecting.  There's a lot of great resources out there and there's no point in me repeating what you can find through a simple Google search.  But I'll at least tell you what you need.  </p>
      <ul>
	<li>Python:  I'm using version 2.7.10, I know that 3.0 exists, but I'm just letting you know that this is the version I'm using and if you're using Python 3 you'll need to make a few adjustments in some of your code.  I'm not sure what those adjustments will be as I haven't used Python 3 yet.</li>
	<li>Pygame:  You'll need this python package in order to make games in python.  I am using version 1.9.2a0 as of this writing.  You can download it at <a href="http://www.pygame.org">Pygame Website</a>.  See how nice I am providing the link for you?  Don't say I never gave ya nothin!  If you're on Windows and you want to check which version of pygame you have just type the following into the command line:  <span class="str">pip show pygame</span>.</li>
	<li>Text Editor:  This is a no-brainer.  How else were you going to input your code, by remote viewing?  Any text editor is fine, I like using Emacs.  You can use anything that floats your fancy.</li>
	
      </ul>
      <p>Well that's about all we'll need.  I know you may be wondering about graphics software and sound editing software and whatever else.  We won't use any of that until Phase III, so we'll worry about it then.  But for now, to get through Phases I and II this is all we need.  Oh, we'll also need our imagination.  I won't blame you for rolling you're eyes, I rolled my own eyes at that.</p>
    </div>

    <hr />
    <h2>A Blank Screen</h2>
    <div class="container">
      <div class="pseudoCode">
	<p>Alright, we're going to get down and dirty and write our first code for the game.  Actually it isn't the first code in the game, since we should have our Vector2D and Stack classes already written.  You don't have those yet?  Well, go back to the <a href="vectors.html">vectors</a> and <a href="stacks.html">stacks</a> sections and complete them before doing this.  Ok, I'm assuming you have those written and saved in their respective files.  You also have you your folder structure all set up and you're ready to add another file to it.</p>
      </div>
      <div class="codeText">
	<code>
	  <span class="kw">class</span> <span class="cn">Stack</span>(<span class="kw">object</span>):<br>
	  <div class="tabLeft">
	    <span class="kw">def</span> <span class="mn">__init__</span>(<span class="kw">self</span>):<br>
	    <div class="tabLeft">
	      <span class="kw">self</span>.items = []<br><br>
	    </div>
	    <span class="kw">def</span> <span class="mn">isEmpty</span>(<span class="kw">self</span>):<br>
	    <div class="tabLeft">
	      <span class="kw">if</span> <span class="mn">len</span>(<span class="kw">self</span>.items) > 0:<br>
	      <div class="tabLeft"><span class="kw">return</span> <span class="py">False</span><br></div>
	      <span class="kw">return</span> <span class="py">True</span><br><br>
	    </div>
	    <span class="kw">def</span> <span class="mn">length</span>(self):<br>
	    <div class="tabLeft">
	      <span class="kw">return</span> <span class="mn">len</span>(<span class="kw">self</span>.items)<br><br>
	    </div>
	    <span class="kw">def</span> <span class="mn">clear</span>(<span class="kw">self</span>):<br>
	    <div class="tabLeft">
	      <span class="kw">self</span>.items = []<br><br>
	    </div>
	    <span class="kw">def</span> <span class="mn">push</span>(<span class="kw">self</span>, item):<br>
	    <div class="tabLeft">
	      <span class="kw">self</span>.items.<span class="mn">append</span>(item)<br><br>
	    </div>
	    <span class="kw">def</span> <span class="mn">pop</span>(self):<br>
	    <div class="tabLeft">
	      <span class="kw">if</span> <span class="mn">len</span>(<span class="kw">self</span>.items) > 0:<br>
	      <div class="tabLeft">
		<span class="var">removedItem</span> = <span class="kw">self</span>.items.<span class="mn">pop</span>(<span class="mn">len</span>(<span class="kw">self</span>.items)-1)<br>
		<span class="kw">return</span> <span class="var">removedItem</span><br>
	      </div>
	      <span class="kw">return</span> <span class="py">None</span><br><br>
	    </div>
	    <span class="kw">def</span> <span class="mn">peek</span>(self):<br>
	    <div class="tabLeft">
	      <span class="kw">if</span> <span class="mn">len</span>(<span class="kw">self</span>.items) > 0:<br>
	      <div class="tabLeft">
		<span class="kw">return</span> <span class="kw">self</span>.items[<span class="mn">len</span>(<span class="kw">self</span>.items)-1]<br>
	      </div>
	      <span class="kw">return</span> <span class="py">None</span><br><br>
	    </div>

	  </div>
	</code>
      </div>
      
    </div>

    </div>
    <div class="buffer"></div>
    <footer>
      <div class="bottomNav">
	<ul>
	  <li><a href="vectors.html">Previous</a></li>
	  <li><a href="#top">Top</a></li>
	  <li><a href="#top">Next</a></li>
	</ul>
      </div>
    </footer>
  </body>
</html>
